{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortBy","type","setState","reverse","prevState","reset","sortedGoods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","this","className","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,OAAS,SAACC,GACR,EAAKC,SAAS,CAAEJ,SAAUG,KAP9B,EAUEE,QAAU,WACR,EAAKD,UAAS,SAACE,GAAD,MAAgB,CAC5BP,YAAaO,EAAUP,gBAZ7B,EAgBEQ,MAAQ,WACN,EAAKH,SAAS,CACZL,YAAY,EACZC,SAAUL,EAASM,QAnBzB,4CAuBE,WAAU,IAAD,OACDO,EAvDH,SACLC,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQb,GACN,KAAKL,EAASmB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITlB,GACFW,EAAaL,UAGRK,EAgCeQ,CAClBtB,EACAuB,KAAKrB,OAGP,EAAiCqB,KAAKrB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEjB,KAAK,SACLiB,UAAWC,IACT,iBACA,CACE,WAAYrB,IAAaL,EAASmB,WAGtCQ,QAAS,kBAAM,EAAKpB,OAAOP,EAASmB,WARtC,iCAaA,wBACEX,KAAK,SACLiB,UAAWC,IACT,oBACA,CACE,WAAYrB,IAAaL,EAASqB,SAGtCM,QAAS,kBAAM,EAAKpB,OAAOP,EAASqB,SARtC,4BAaA,wBACEb,KAAK,SACLiB,UAAWC,IACT,oBACA,CACE,YAAatB,IAGjBuB,QAASH,KAAKd,QARhB,sBAYEL,IAAaL,EAASqB,QACnBhB,IAAaL,EAASmB,UACtBf,IACH,wBACEI,KAAK,SACLiB,UAAU,4BACVE,QAASH,KAAKZ,MAHhB,sBASJ,6BACGC,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAtFrB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.520cefee.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortBy = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  reverse = () => {\n    this.setState((prevState) => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const sortedGoods = getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.sortBy(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.sortBy(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          {(sortType === SortType.LENGTH\n            || sortType === SortType.ALPHABET\n            || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {sortedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}